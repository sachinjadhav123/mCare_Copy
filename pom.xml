<?xml version="1.0" encoding="UTF-8" ?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.jenkins-ci.test</groupId>
	<artifactId>large-multi-module</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>pom</packaging>
	<name>A large multi module test project</name>
	<inceptionYear>2011</inceptionYear>

	<description>
		A large test project with various plugins bound to lifecycles to excercise Jenkin's Maven hooks.
	</description>

	<organization>
		<name>Jenkins CI</name>
		<url>http://www.jenkins-ci.org/</url>
	</organization>

	<developers>
		<developer>
			<id>jtnord</id>
			<name>James Nord</name>
			<timezone>0</timezone>
			<roles>
				<role>developer</role>
			</roles>
		</developer>
	</developers>

	<modules>
		<module>module-3</module>
		<module>module-4</module>
	</modules>

	<properties>
		<!-- used in various plug-ins to configure source compatibility. -->
		<javaVersion>1.6</javaVersion>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
	</properties>

	<issueManagement>
		<system>JIRA</system>
		<url>https://issues.jenkins-ci.org/</url>
	</issueManagement>

	<!--
		svn will complain . is not a working directory but we want to run the 
		buildnumber maven plugin so hudson sees a mojo run.
	-->
	<scm>
		<connection>scm:git:https://github.com/jtnord/maven-test-project.git</connection>
		<developerConnection>scm:git:https://github.com/jtnord/maven-test-project.git</developerConnection>
	</scm>

	<build>
		<!-- Set the version of plugins that we may depend on, so they are fixed over time. -->
		<pluginManagement>
			<plugins>
				<plugin>
					<artifactId>maven-antrun-plugin</artifactId>
					<version>1.3</version>
				</plugin>
				<plugin>
					<artifactId>maven-assembly-plugin</artifactId>
					<version>2.2-beta-4</version>
				</plugin>
				<plugin>
					<artifactId>maven-checkstyle-plugin</artifactId>
					<version>2.2</version>
				</plugin>
				<plugin>
					<artifactId>maven-clean-plugin</artifactId>
					<version>2.2</version>
				</plugin>
				<plugin>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>2.0.2</version>
					<configuration>
						<source>${javaVersion}</source>
						<target>${javaVersion}</target>
						<encoding>${project.build.sourceEncoding}</encoding>
						<showDeprecation>true</showDeprecation>
						<showWarnings>true</showWarnings>
					</configuration>
				</plugin>
				<plugin>
					<artifactId>maven-dependency-plugin</artifactId>
					<version>2.0</version>
				</plugin>
				<plugin>
					<artifactId>maven-deploy-plugin</artifactId>
					<version>2.4</version>
				</plugin>
				<plugin>
					<artifactId>maven-ear-plugin</artifactId>
					<version>2.3.1</version>
				</plugin>
				<plugin>
					<artifactId>maven-eclipse-plugin</artifactId>
					<version>2.5.1</version>
					<configuration>
						<downloadSources>true</downloadSources>
						<downloadJavadocs>true</downloadJavadocs>
					</configuration>
				</plugin>
				<plugin>
					<artifactId>maven-ejb-plugin</artifactId>
					<version>2.1</version>
				</plugin>
				<plugin>
					<artifactId>maven-enforcer-plugin</artifactId>
					<version>1.0-beta-1</version>
					<executions>
						<execution>
							<id>enforce-rules</id>
							<goals>
								<goal>enforce</goal>
                                                                <goal>display-info</goal>
							</goals>
							<phase>validate</phase>
							<configuration>
								<rules>
									<requireMavenVersion>
										<version>[2.2.1,)</version>
									</requireMavenVersion>
									<requireReleaseDeps>
										<message>Snapshot dependencies in a release version.  Really??</message>
										<onlyWhenRelease>true</onlyWhenRelease>
									</requireReleaseDeps>
									<requirePluginVersions>
										<message>Plugins without version defined. Really??</message>
									</requirePluginVersions>
								</rules>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<artifactId>maven-help-plugin</artifactId>
					<version>2.1</version>
				</plugin>
				<plugin>
					<artifactId>maven-idea-plugin</artifactId>
					<version>2.2</version>
				</plugin>
				<plugin>
					<artifactId>maven-install-plugin</artifactId>
					<version>2.2</version>
					<configuration>
						<createChecksum>true</createChecksum>
					</configuration>
				</plugin>
				<plugin>
					<artifactId>maven-jar-plugin</artifactId>
					<version>2.2</version>
					<configuration>
						<archive>
							<index>true</index>
							<manifest>
								<addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
								<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
							</manifest>
							<manifestEntries>
								<SCM-URL>${project.scm.connection}</SCM-URL>
								<SCM-Revision>${buildNumber}</SCM-Revision>
								<Hudson-URL>${env.HUDSON_URL}</Hudson-URL>
								<Hudson-Build>${env.BUILD_TAG}</Hudson-Build>
							</manifestEntries>
						</archive>
					</configuration>
				</plugin>
				<plugin>
					<artifactId>maven-javadoc-plugin</artifactId>
					<!-- 2.5 is broken with multi modules - causes dependencies from the reactor not to be found! -->
					<version>2.4</version>
					<executions>
						<execution>
							<id>attach-javadocs</id>
							<phase>verify</phase>
							<goals>
								<goal>jar</goal>
							</goals>
						</execution>
					</executions>
					<!--  configuration of this plugin is done in the reporting section -->
				</plugin>
				<plugin>
					<artifactId>maven-jxr-plugin</artifactId>
					<version>2.1</version>
					<!--  configuration of this plugin is done in the reporting section -->
				</plugin>
				<plugin>
					<artifactId>maven-plugin-plugin</artifactId>
					<version>2.4.1</version>
				</plugin>
				<plugin>
					<artifactId>maven-pmd-plugin</artifactId>
					<version>2.4</version>
					<!--  configuration of this plugin is done in the reporting section -->
				</plugin>
				<plugin>
					<artifactId>maven-project-info-reports-plugin</artifactId>
					<version>2.1.2</version>
					<!--  configuration of this plugin is done in the reporting section -->
				</plugin>
				<plugin>
					<artifactId>maven-rar-plugin</artifactId>
					<version>2.2</version>
				</plugin>
				<plugin>
					<artifactId>maven-release-plugin</artifactId>
					<version>2.0-beta-8</version>
					<configuration>
						<useReleaseProfile>false</useReleaseProfile>
					</configuration>
				</plugin>
				<plugin>
					<artifactId>maven-resources-plugin</artifactId>
					<version>2.3</version>
				</plugin>
				<plugin>
					<artifactId>maven-scm-plugin</artifactId>
					<version>1.4</version>
					<executions>
						<execution>
							<id>validate</id>
							<goals>
								<goal>validate</goal>
							</goals>
							<phase>validate</phase>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<artifactId>maven-site-plugin</artifactId>
					<!-- 2.1 is broken with inheriting modules -->
					<version>2.0.1</version>
					<configuration>
						<outputEncoding>${project.reporting.outputEncoding}</outputEncoding>
					</configuration>
				</plugin>
				<plugin>
					<artifactId>maven-source-plugin</artifactId>
					<version>2.1</version>
					<executions>
						<execution>
							<id>attach-sources</id>
							<phase>verify</phase>
							<goals>
								<goal>jar-no-fork</goal>
								<goal>test-jar-no-fork</goal>
							</goals>
						</execution>
					</executions>
					<configuration>
						<includePom>true</includePom>
					</configuration>
				</plugin>
				<plugin>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>2.4.3</version>
				</plugin>
				<plugin>
					<artifactId>maven-surefire-report-plugin</artifactId>
					<version>2.4.3</version>
				</plugin>
				<plugin>
					<artifactId>maven-war-plugin</artifactId>
					<version>2.1-beta-1</version>
					<configuration>
						<archive>
							<index>true</index>
							<manifest>
								<addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
								<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
							</manifest>
							<manifestEntries>
								<SCM-URL>${project.scm.connection}</SCM-URL>
								<SCM-Revision>${buildNumber}</SCM-Revision>
								<Hudson-URL>${env.HUDSON_URL}</Hudson-URL>
								<Hudson-Build>${env.BUILD_TAG}</Hudson-Build>
							</manifestEntries>
						</archive>
						<!-- http://jira.codehaus.org/browse/MWAR-187 -->
						<useCache>false</useCache>
					</configuration>
				</plugin>
<!--
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>buildnumber-maven-plugin</artifactId>
					<version>1.0-beta-5-SNAPSHOT</version>
					<executions>
						<execution>
							<phase>validate</phase>
							<goals>
								<goal>create</goal>
							</goals>
						</execution>
					</executions>
					<configuration>
						<doCheck>false</doCheck>
						<doUpdate>false</doUpdate>
						<useLastCommittedRevision>true</useLastCommittedRevision>
						<revisionOnScmFailure>UNKNOWN</revisionOnScmFailure>
					</configuration>
				</plugin>
-->
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>cobertura-maven-plugin</artifactId>
					<version>2.2</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>findbugs-maven-plugin</artifactId>
					<version>2.0</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>taglist-maven-plugin</artifactId>
					<version>2.4</version>
				</plugin>
			</plugins>
		</pluginManagement>

		<plugins>
			<plugin>
				<artifactId>maven-source-plugin</artifactId>
			</plugin>
			<plugin>
				<artifactId>maven-enforcer-plugin</artifactId>
			</plugin>
<!--
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>buildnumber-maven-plugin</artifactId>
			</plugin>
-->
			<plugin>
				<artifactId>maven-scm-plugin</artifactId>
			</plugin>
			<plugin>
				<artifactId>maven-checkstyle-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>findbugs-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<artifactId>maven-pmd-plugin</artifactId>
			</plugin>
		</plugins>

	</build>

	<reporting>
		<plugins>
			<plugin>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>2.2</version>
			</plugin>
			<plugin>
				<artifactId>maven-javadoc-plugin</artifactId>
				<!-- 2.5 is broken with multi modules - causes dependencies from the reactor not to be found! -->
				<version>2.4</version>
				<configuration>
					<linksource>true</linksource>
					<version />
					<author />
					<tags>
						<tag>
							<name>todo</name>
							<placement>a</placement>
							<head>To Do:</head>
						</tag>
					</tags>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-jxr-plugin</artifactId>
				<version>2.1</version>
				<configuration>
					<outputEncoding>${project.reporting.outputEncoding}</outputEncoding>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-pmd-plugin</artifactId>
				<version>2.4</version>
				<configuration>
					<targetJdk>${javaVersion}</targetJdk>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-project-info-reports-plugin</artifactId>
				<version>2.1.2</version>
				<configuration>
					<dependencyLocationsEnabled>false</dependencyLocationsEnabled>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-surefire-report-plugin</artifactId>
				<version>2.4.3</version>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>findbugs-maven-plugin</artifactId>
				<version>2.0</version>
				<configuration>
					<xmlOutput>true</xmlOutput>
					<xmlOutputDirectory>${project.build.directory}/</xmlOutputDirectory>
					<threshold>Low</threshold>
					<effort>Max</effort>
					<findbugsXmlOutput>true</findbugsXmlOutput>
					<findbugsXmlWithMessages>true</findbugsXmlWithMessages>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>taglist-maven-plugin</artifactId>
				<version>2.4</version>
				<configuration>
					<tags>
						<tag>TODO</tag>
						<tag>@todo</tag>
						<tag>FIXME</tag>
						<tag>XXX</tag>
						<tag>BUG</tag>
					</tags>
				</configuration>
			</plugin>
		</plugins>
	</reporting>

	<distributionManagement>
		<repository>
			<id>release-repo</id>
			<name>Release Repository</name>
			<url>file://${java.io.tmpdir}/maven_repo/release</url>
		</repository>
		<!-- use the following if you ARE using a snapshot version. -->
		<snapshotRepository>
			<id>snapshot-repo</id>
			<name>Snapshot Repository</name>
			<url>file://${java.io.tmpdir}/maven_repo/snapshot</url>
		</snapshotRepository>
	</distributionManagement>

</project>
